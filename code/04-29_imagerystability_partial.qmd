---
title: "Imagery stability"
format: html
---
# Introduction  
At this point, we have downloaded growing-season imagery for one field for 3 years.  

For each year, we have extracted, on a pixel basis, the median GNDVI value. Those maps could be related to and represent yield potential areas (i.e., areas with higher growing-season median values have greater yield potential than areas with lower median values).  

What if we used this information to generate a yield spatial-temporal variability analysis?  

The goals of this exercise are to:  
  - Create spatial-temporal yield stability classes based on year-specific median GNDVI values.  
  - Compare the GNDVI-based vs. yield-based spatial stability maps  
  

# Setup  
```{r}
#| message: false
#| warning: false


library(tidyverse)
library(sf)
library(stars)
library(ggthemes)
library(mapview)

```

```{r}
pixels_17 <- read_sf("../data/2017_pixel_median.geojson") %>% 
  dplyr::select(gndvi_17 = gndvi)

pixels_17
```

```{r}
pixels_19 <- read_sf("../data/2019_pixel_median.geojson")%>% 
  dplyr::select(gndvi_19 = gndvi)


pixels_19
```

```{r}
pixels_20 <- read_sf("../data/2020_pixel_median.geojson")%>% 
  dplyr::select(gndvi_20 = gndvi)


pixels_20
```

# Wrangling  
```{r}
pixels_all <- pixels_17 %>%
  st_join(pixels_19,
          join = st_equals,
          left = T) %>%
  st_join(pixels_20,
          join = st_equals,
          left = T)

pixels_all
```

# Spatial-temporal stability analysis  


```{r pixel_stab}
pixel_stab <- pixels_all %>% 
  pivot_longer(cols = contains("gndvi")) %>% 
  group_by(name) %>% 
  mutate(median = median(value, na.rm = T)) %>% 
  mutate(year_std = value/median*100) %>% 
  group_by(geometry) %>% 
  summarise(mean  = mean(year_std, na.rm = T),
            sd = sd(year_std, na.rm = T),
            cv = (sd/mean)*100
            )
  
pixel_stab %>%
  summary
```


```{r pixel_stab_class}
pixel_stab_class <- pixel_stab %>%
  mutate(stclass = case_when(
    cv > 15  ~ "unstable",
    cv < 15  & mean < 80  ~ "low-stable",
    cv < 15  & mean > 80  & mean < 110 ~ "medium-stable",
    cv < 15  & mean > 110  ~ "high-stable"
  ))


pixel_stab_class %>%
  group_by(stclass) %>%
  tally()
```

# Plots  
```{r mean std}
ggplot(data = pixel_stab_class) +
  geom_sf(aes(fill = mean,
              color = mean
  ), size = 1) +
  scale_fill_viridis_c(na.value = "transparent") +
  scale_color_viridis_c(na.value = "transparent") +
  theme_map() +
  theme(legend.position = "bottom")

```

```{r cv std}
ggplot(data = pixel_stab_class)+
  geom_sf(aes(fill = cv,
              color = cv
              ), size = 1) +
  scale_fill_viridis_c(na.value = "transparent") +
  scale_color_viridis_c(na.value = "transparent") +
  theme_map()+
  theme(legend.position = "bottom")

```

```{r stclass}
ggplot(data = pixel_stab_class)+
  geom_sf(aes(fill = stclass,
              color = stclass
  ), size = 1) +
  scale_fill_viridis_d(option = "C") +
  scale_color_viridis_d(option = "C") +
  theme_map() +
  theme(legend.position = "bottom")

```

How does it compare to yield stability classes?
![](../../07_yield_monitor/output/.png)

# Student evaluations  
Please take 5 min to respond to the TEVAL.  
Your feedback is really important for me to know what worked, what didn't, and improve for next time.  

Thanks!


Link for evaluation: https://webapps.franklin.uga.edu/evaluation/

